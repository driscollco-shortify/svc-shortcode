name: Deploy

on:
  push:
    branches:
      - main

env:
  codePath: cmd
  buildPath: cmd/build
  gcpRegion: europe-west1

jobs:
  build-binary:
    name: Compile Service
    runs-on: ubuntu-latest
    steps:
      - name: Set Access
        run: git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.2

      - name: Restore Go Modules and Build Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go Modules
        run: go mod download

      - name: Check Go Version
        run: go version

      - name: Compile Service
        run: cd $buildPath; make build

      - name: Save Binary
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: ${{ env.buildPath }}/service

  deployment:
    name: Deploy To Docker
    runs-on: ubuntu-latest
    needs: build-binary
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - id: auth
        name: Install Key
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Configure Docker
        run: gcloud auth configure-docker $gcpRegion-docker.pkg.dev --quiet

      - name: Fetch Binary
        uses: actions/download-artifact@v4
        with:
          name: binary

      - name: Permissions Update
        run: chmod a+x service

      - name: Relocate Binary
        run: mv service $buildPath

      - name: Send To Docker
        run: cd $buildPath; make docker

      - name: Send To GCP Run
        run: cd $buildPath; make deploy
        env:
          CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
          GRAFANA_LOGS_ACCESS_TOKEN: ${{ secrets.GRAFANA_LOGS_ACCESS_TOKEN }}
          GRAFANA_LOGS_USERID: ${{ secrets.GRAFANA_LOGS_USERID }}
          GRAFANA_METRICS_KEY: ${{ secrets.GRAFANA_METRICS_KEY }}
          GRAFANA_METRICS_USERID: ${{ secrets.GRAFANA_METRICS_USERID }}
          GRAFANA_PROFILER_HOST: ${{ secrets.GRAFANA_PROFILER_HOST }}
          GRAFANA_PROFILER_PASSWORD: ${{ secrets.GRAFANA_PROFILER_PASSWORD }}
          GRAFANA_PROFILER_USERNAME: ${{ secrets.GRAFANA_PROFILER_USERNAME }}
          GRAFANA_TRACES_AUTHKEY: ${{ secrets.GRAFANA_TRACES_AUTHKEY }}
          SAFESITE_APIKEY: ${{ secrets.SAFESITE_APIKEY }}
          JWT_KEY_PUBLIC: ${{ secrets.JWT_KEY_PUBLIC }}
          JWT_KEY_PRIVATE: ${{ secrets.JWT_KEY_PRIVATE }}
